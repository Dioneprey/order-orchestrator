// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma_client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  RECEIVED
  PROCESSING_ENRICHMENT
  COMPLETED_ENRICHMENT
  FAILED_ENRICHMENT
}

enum Currency {
  USD
  BRL
}

model Order {
  id             String      @id @default(uuid(7))
  externalId     String      @map("external_id")
  customerEmail  String      @map("customer_email")
  customerName   String      @map("customer_name")
  currency       Currency
  idempotencyKey String      @unique @map("idempotency_key")
  status         OrderStatus @default(RECEIVED)

  baseAmount        Float     @map("base_amount")
  convertedAmount   Float?    @map("converted_amount")
  exchangeRate      Float?    @map("exchange_rate")
  convertedCurrency Currency? @map("converted_currency")

  items OrderItem[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@index([externalId])
  @@map("orders")
}

model OrderItem {
  id       String   @id @default(uuid(7))
  orderId  String
  sku      String
  qty      Int
  currency Currency

  unitPrice          Float     @map("unit_price")
  convertedUnitPrice Float?    @map("converted_unit_price")
  convertedCurrency  Currency? @map("converted_currency")
  exchangeRate       Float?    @map("exchange_rate")

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@index([orderId])
  @@map("order_items")
}
