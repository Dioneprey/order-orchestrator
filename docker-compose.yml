services:
  api:
    container_name: order_orchestrator_api
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_USER}@database:5432/${DATABASE_NAME}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JAEGER_URL=http://jaeger:4318/v1/traces
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - database
    networks:
      - inbazz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - api
  database:
    container_name: order_orchestrator_database
    env_file:
      - .env
    image: "postgres:15"
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - inbazz-network

  redis:
    image: redis:8.2.1
    env_file:
      - .env
    container_name: order_orchestrator_redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - inbazz-network

  jaeger:
    image: jaegertracing/all-in-one:1.73.0
    container_name: order_orchestrator_jaeger
    ports:
      - "16686:16686" # UI
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "14268:14268" # Jaeger ingest
      - "14250:14250" # Jaeger gRPC
      - "9411:9411" # Zipkin
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      - inbazz-network

volumes:
  postgres_data:
  redis_data:

networks:
  inbazz-network:
    driver: bridge
